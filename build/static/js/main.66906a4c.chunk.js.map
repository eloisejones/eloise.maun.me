{"version":3,"sources":["Resume.js","App.js","serviceWorker.js","index.js"],"names":["classLists","card","card_header_l1","card_header_l2","card_body","card_body_list_unstyled","card_body_list_group","list_group_item","list_group_item_title","list_group_item_text","monthNames","Summary","props","summaries","data","map","cv","i","react_default","a","createElement","className","key","title","text","id","Education","education","school","degree","time","start","end","Languages","languages","years","Skills","skills","rank","j","push","Experiences","getDateDisplay","defStr","dateArr","result","length","companies","timeStart","timeEnd","positions","cv2","desc","tools","replace","name","Resume","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","fixedRef","fetch","then","resp","json","setState","React","Component","NavBar","phone","email","App","contactInfo","src_Resume","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66906a4c.chunk.js","sourcesContent":["import React from 'react';\n\nconst classLists = {\n  'card'                    : 'card my-3',\n  'card_header_l1'          : 'card-header p-2 text-center text-uppercase text-white font-weight-bold',\n  'card_header_l2'          : 'card-header p-2 text-left text-uppercase text-white font-weight-bold',\n  'card_body'               : 'card-body',\n  'card_body_list_unstyled' : 'card-body p-3 list-unstyled',\n  'card_body_list_group'    : 'card-body list-group list-group-flush p-0',\n  'list_group_item'         : 'list-group-item p-2',\n  'list_group_item_title'   : 'list-group-item-title px-1 m-0 text-uppercase font-weight-bold',\n  'list_group_item_text'    : 'list-group-item-text p-1 pl-4 pt-0 m-0'\n}\n\nconst monthNames = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n\nclass Resume extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    }\n  }\n\n  componentDidMount() {\n    const fixedRef = this; //creating reference for .then async calls\n\n    fetch(\"./resumeData.json\")\n      .then((resp) => resp.json()) // Transform the data into json\n      .then(function(data) {\n        fixedRef.setState({'data':data});\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 col-xs-5\">\n            \n            <Summary data={this.state.data} />\n              \n            <Education data={this.state.data} />\n\n            <Languages data={this.state.data} />\n\n            <Skills data={this.state.data} />\n\n          </div>\n          \n          <div className=\"col-md-8 col-xs-7\">\n\n            <Experiences data={this.state.data} />\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Summary(props) {\n  const sumData = ('data' in props && 'summaries' in props.data) ? props.data.summaries : [];\n\n  const summaries = sumData.map((cv, i) => {\n    return (\n      <div className={classLists.list_group_item} key={i}>\n        <div className={classLists.list_group_item_title}>{cv.title}</div>\n        <div className={classLists.list_group_item_text}>{cv.text}</div>\n      </div>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"summary\">\n      <div className={classLists.card_header_l1}>Summary</div>\n      <div className={classLists.card_body_list_group}>\n        {summaries}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Education(props) {\n  const edData = ('data' in props && 'education' in props.data) ? props.data.education : [];\n\n  const education = edData.map((cv, i) => {\n    return (\n      <div className={classLists.list_group_item} key={i}>\n        <div className={classLists.list_group_item_title}>{cv.school}</div>\n        <div className={classLists.list_group_item_text}>\n          {cv.degree} ({cv.time.start[0]}-{cv.time.end[0]})\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"education\">\n      <div className={classLists.card_header_l1}>Education</div>\n      <div className={classLists.card_body_list_group}>\n        {education}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Languages(props) {\n  const langData = ('data' in props && 'languages' in props.data) ? props.data.languages : [];\n\n  const languages = langData.map((cv, i) => {\n    return (\n      <li key={i}>\n        <div className='badge badge-pill float-right text-white'>{cv.years} years</div>\n        {cv.title}\n      </li>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"languages\">\n      <div className={classLists.card_header_l1}>Languages</div>\n      <div className={classLists.card_body_list_unstyled}>\n        {languages}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Skills(props) {\n  const skillData = ('data' in props && 'skills' in props.data) ? props.data.skills : [];\n\n  const skills = skillData.map((cv, i) => {\n    var rank = [];\n    for (var j=1; j <= cv.rank; j++) { \n      rank.push(<i className='fas fa-star' key={'r'+j}></i>);\n    }\n    return (\n      <li key={i}>\n        <div className='badge badge-pill float-right text-white'>{rank}</div>\n        {cv.title}\n      </li>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"skills\">\n      <div className={classLists.card_header_l1}>Skills</div>\n      <div className={classLists.card_body_list_unstyled}>\n        {skills}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Experiences(props) {\n  const compData = ('data' in props && 'companies' in props.data) ? props.data.companies : [];\n\n  function getDateDisplay(defStr,dateArr) {\n    var result = defStr;\n    if (dateArr) {\n      if (dateArr.length === 1) { result = dateArr[0]; }\n      else if (dateArr.length > 1) { result = monthNames[dateArr[1]]+' '+dateArr[0]; }\n    }\n    return result;\n  }\n\n  const companies = compData.map((cv, i) => {\n    var timeStart = getDateDisplay('',cv.time.start);\n    var timeEnd   = getDateDisplay('Present',cv.time.end);\n\n    const positions = cv.positions.map((cv2, j) => {\n      const desc = [<p>{cv2.text}</p>];\n      if ('tools' in cv2) { desc.push(<p>{cv2.tools}</p>); }\n\n      return (\n        <div className={classLists.list_group_item} key={'comp'+1+'pos'+j}>\n          <div className={classLists.list_group_item_title}>{cv2.title}</div>\n          <div className={classLists.list_group_item_text.replace('pl-4','pl-0')}>{desc}</div>\n        </div>\n      );\n    });\n\n    return (\n      <div className={classLists.card.replace('my-3','my-2')} key={'comp'+i}>\n        <div className={classLists.card_header_l2}>\n        <span className='time font-weight-normal float-right text-capitalize'>{timeStart} - {timeEnd}</span>\n          {cv.name}\n        </div>\n        <div className={classLists.card_body_list_group}>\n          {positions}\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"experiences\">\n      <div className={classLists.card_header_l1}>Experience</div>\n      <div className={classLists.card_body+' px-1 py-0'}>\n        {companies}\n      </div>\n    </div>\n  );\n}\n\nexport default Resume;","import React from 'react';\nimport './App.css';\nimport Resume from './Resume';\n\nfunction App(props) {\n  const contactInfo = {\n    name:  'Eloise Maun',\n    phone: '(802) 793-2515',\n    email: 'eloise@maun.me'\n  }\n  \n    return (\n    <div id='game-page-layout'>\n      <NavBar name={contactInfo.name} phone={contactInfo.phone} email={contactInfo.email} />\n      <Resume />\n    </div>\n  );\n}\n\nfunction NavBar(props) {\n    return (\n        <div className=\"navbar justify-content-center fixed-top bg-white b-bottom\">\n          <div className='m-0 p-2'>\n            <h1 className='m-0 text-center'>{props.name}</h1>\n            <p className=\"m-0 text-center\">{props.phone} &mdash; {props.email}</p>\n          </div>\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}