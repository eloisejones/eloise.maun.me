{"ast":null,"code":"var _jsxFileName = \"/Users/emaun/GitHub/eloise.maun.me/eloise_maun_me/src/Resume.js\";\nimport React from 'react';\nconst classLists = {\n  'card_header_l1': 'card-header p-2 text-center text-uppercase text-white font-weight-bold',\n  'card_header_l2': '',\n  'card_body': '',\n  'card_body_list_unstyled': 'card-body p-3 list-unstyled',\n  'card_body_list_group': 'card-body list-group list-group-flush p-0',\n  'list_group_item': 'list-group-item p-2',\n  'list_group_item_title': 'list-group-item-title px-1 m-0 text-uppercase font-weight-bold',\n  'list_group_item_text': 'list-group-item-text p-1 pl-4 pt-0 m-0'\n};\nconst monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction Summary(props) {\n  const sumData = 'data' in props && 'summaries' in props.data ? props.data.summaries : [];\n  const summaries = sumData.map((cv, i) => {\n    return React.createElement(\"div\", {\n      className: classLists.list_group_item,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classLists.list_group_item_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, cv.title), React.createElement(\"div\", {\n      className: classLists.list_group_item_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, cv.text));\n  });\n  return React.createElement(\"div\", {\n    className: \"card\",\n    id: \"summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Summary\"), React.createElement(\"div\", {\n    className: classLists.card_body_list_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, summaries));\n}\n\nfunction Education(props) {\n  const edData = 'data' in props && 'education' in props.data ? props.data.education : [];\n  const education = edData.map((cv, i) => {\n    return React.createElement(\"div\", {\n      className: classLists.list_group_item,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classLists.list_group_item_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, cv.school), React.createElement(\"div\", {\n      className: classLists.list_group_item_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, cv.degree, \" (\", cv.time.start[0], \"-\", cv.time.end[0], \")\"));\n  });\n  return React.createElement(\"div\", {\n    className: \"card\",\n    id: \"education\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Education\"), React.createElement(\"div\", {\n    className: classLists.card_body_list_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, education));\n}\n\nfunction Languages(props) {\n  const langData = 'data' in props && 'languages' in props.data ? props.data.languages : [];\n  const languages = langData.map((cv, i) => {\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-pill float-right text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, cv.years, \" years\"), cv.title);\n  });\n  return React.createElement(\"div\", {\n    className: \"card\",\n    id: \"languages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Languages\"), React.createElement(\"div\", {\n    className: classLists.card_body_list_unstyled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, languages));\n}\n\nfunction Skills(props) {\n  const skillData = 'data' in props && 'skills' in props.data ? props.data.skills : [];\n  const skills = skillData.map((cv, i) => {\n    var rank = [];\n\n    for (var j = 1; j <= cv.rank; j++) {\n      rank.push(React.createElement(\"i\", {\n        className: \"fas fa-star\",\n        key: 'r' + j,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-pill float-right text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, rank), cv.title);\n  });\n  return React.createElement(\"div\", {\n    className: \"card\",\n    id: \"skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Skills\"), React.createElement(\"div\", {\n    className: classLists.card_body_list_unstyled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, skills));\n}\n/*\n$(\"#experiences > .panel-body\").append(\n  \"<div class='panel panel-default'>\"+\n  \"<div class='panel-heading'><h3 class='panel-title'>\"+a.name+\" <span class='time'>\"+a.years+\"</span></h3></div>\"+\n  \"<dl class='list-group'></dl>\"+\n  \"</div>\"\n);\n$.each(a.positions, function(key, val) {\n  $(\"#experiences dl.list-group:last\").append(\n      \"<div class='list-group-item'>\"+\n      \"<dt class='list-group-item-heading'>\"+val.title+\"</dt>\"+\n      \"<dd class='list-group-item-text'>\"+val.descriptions[0].text+\"</dd>\"+\n      \"</div>\"\n*/\n\n\nfunction Experiences(props) {\n  const compData = 'data' in props && 'companies' in props.data ? props.data.companies : [];\n\n  function getDateDisplay(defStr, dateArr) {\n    var result = defStr;\n\n    if (dateArr) {\n      if (dateArr.length === 1) {\n        result = dateArr[0];\n      } else if (dateArr.length > 1) {\n        result = monthNames[dateArr[1]] + ' ' + dateArr[0];\n      }\n    }\n\n    return result;\n  }\n\n  const companies = compData.map((cv, i) => {\n    var timeStart = getDateDisplay('', cv.time.start);\n    var timeEnd = getDateDisplay('Present', cv.time.end);\n    const positions = cv.positions.map((cv2, j) => {\n      return React.createElement(\"div\", {\n        className: classLists.list_group_item,\n        key: 'comp' + 1 + 'pos' + j,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classLists.list_group_item_title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, cv2.title), React.createElement(\"div\", {\n        className: classLists.list_group_item_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, cv2.descriptions[0].text));\n    });\n    return React.createElement(\"div\", {\n      className: \"card\",\n      key: 'comp' + i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classLists.card_header_l2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, cv.name, React.createElement(\"span\", {\n      className: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, timeStart, \"-\", timeEnd)), React.createElement(\"div\", {\n      className: classLists.card_body_list_group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, positions));\n  });\n  return React.createElement(\"div\", {\n    className: \"card\",\n    id: \"experiences\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Experience\"), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, companies));\n}\n\nclass Resume extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    const fixedRef = this; //creating reference for .then async calls\n\n    fetch(\"./resumeData.json\").then(resp => resp.json()) // Transform the data into json\n    .then(function (data) {\n      fixedRef.setState({\n        'data': data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 col-xs-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Summary, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(Education, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Languages, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(Skills, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-8 col-xs-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Experiences, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Resume;","map":{"version":3,"sources":["/Users/emaun/GitHub/eloise.maun.me/eloise_maun_me/src/Resume.js"],"names":["React","classLists","monthNames","Summary","props","sumData","data","summaries","map","cv","i","list_group_item","list_group_item_title","title","list_group_item_text","text","card_header_l1","card_body_list_group","Education","edData","education","school","degree","time","start","end","Languages","langData","languages","years","card_body_list_unstyled","Skills","skillData","skills","rank","j","push","Experiences","compData","companies","getDateDisplay","defStr","dateArr","result","length","timeStart","timeEnd","positions","cv2","descriptions","card_header_l2","name","Resume","Component","constructor","state","componentDidMount","fixedRef","fetch","then","resp","json","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst classLists = {\n  'card_header_l1'          : 'card-header p-2 text-center text-uppercase text-white font-weight-bold',\n  'card_header_l2'          : '',\n  'card_body'               : '',\n  'card_body_list_unstyled' : 'card-body p-3 list-unstyled',\n  'card_body_list_group'    : 'card-body list-group list-group-flush p-0',\n  'list_group_item'         : 'list-group-item p-2',\n  'list_group_item_title'   : 'list-group-item-title px-1 m-0 text-uppercase font-weight-bold',\n  'list_group_item_text'    : 'list-group-item-text p-1 pl-4 pt-0 m-0'\n}\n\nconst monthNames = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n\nfunction Summary(props) {\n  const sumData = ('data' in props && 'summaries' in props.data) ? props.data.summaries : [];\n\n  const summaries = sumData.map((cv, i) => {\n    return (\n      <div className={classLists.list_group_item} key={i}>\n        <div className={classLists.list_group_item_title}>{cv.title}</div>\n        <div className={classLists.list_group_item_text}>{cv.text}</div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"card\" id=\"summary\">\n      <div className={classLists.card_header_l1}>Summary</div>\n      <div className={classLists.card_body_list_group}>\n        {summaries}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Education(props) {\n  const edData = ('data' in props && 'education' in props.data) ? props.data.education : [];\n\n  const education = edData.map((cv, i) => {\n    return (\n      <div className={classLists.list_group_item} key={i}>\n        <div className={classLists.list_group_item_title}>{cv.school}</div>\n        <div className={classLists.list_group_item_text}>\n          {cv.degree} ({cv.time.start[0]}-{cv.time.end[0]})\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"card\" id=\"education\">\n      <div className={classLists.card_header_l1}>Education</div>\n      <div className={classLists.card_body_list_group}>\n        {education}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Languages(props) {\n  const langData = ('data' in props && 'languages' in props.data) ? props.data.languages : [];\n\n  const languages = langData.map((cv, i) => {\n    return (\n      <li key={i}>\n        <div className='badge badge-pill float-right text-white'>{cv.years} years</div>\n        {cv.title}\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"card\" id=\"languages\">\n      <div className={classLists.card_header_l1}>Languages</div>\n      <div className={classLists.card_body_list_unstyled}>\n        {languages}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Skills(props) {\n  const skillData = ('data' in props && 'skills' in props.data) ? props.data.skills : [];\n\n  const skills = skillData.map((cv, i) => {\n    var rank = [];\n    for (var j=1; j <= cv.rank; j++) { \n      rank.push(<i className='fas fa-star' key={'r'+j}></i>);\n    }\n    return (\n      <li key={i}>\n        <div className='badge badge-pill float-right text-white'>{rank}</div>\n        {cv.title}\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"card\" id=\"skills\">\n      <div className={classLists.card_header_l1}>Skills</div>\n      <div className={classLists.card_body_list_unstyled}>\n        {skills}\n      </div>\n    </div>\n  );\n}\n/*\n$(\"#experiences > .panel-body\").append(\n  \"<div class='panel panel-default'>\"+\n  \"<div class='panel-heading'><h3 class='panel-title'>\"+a.name+\" <span class='time'>\"+a.years+\"</span></h3></div>\"+\n  \"<dl class='list-group'></dl>\"+\n  \"</div>\"\n);\n$.each(a.positions, function(key, val) {\n  $(\"#experiences dl.list-group:last\").append(\n      \"<div class='list-group-item'>\"+\n      \"<dt class='list-group-item-heading'>\"+val.title+\"</dt>\"+\n      \"<dd class='list-group-item-text'>\"+val.descriptions[0].text+\"</dd>\"+\n      \"</div>\"\n*/\n\n\nfunction Experiences(props) {\n  const compData = ('data' in props && 'companies' in props.data) ? props.data.companies : [];\n\n  function getDateDisplay(defStr,dateArr) {\n    var result = defStr;\n    if (dateArr) {\n      if (dateArr.length === 1) { result = dateArr[0]; }\n      else if (dateArr.length > 1) { result = monthNames[dateArr[1]]+' '+dateArr[0]; }\n    }\n    return result;\n  }\n\n  const companies = compData.map((cv, i) => {\n    var timeStart = getDateDisplay('',cv.time.start);\n    var timeEnd   = getDateDisplay('Present',cv.time.end);\n\n    const positions = cv.positions.map((cv2, j) => {\n      return (\n        <div className={classLists.list_group_item} key={'comp'+1+'pos'+j}>\n          <div className={classLists.list_group_item_title}>{cv2.title}</div>\n          <div className={classLists.list_group_item_text}>{cv2.descriptions[0].text}</div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"card\" key={'comp'+i}>\n        <div className={classLists.card_header_l2}>\n          {cv.name}\n          <span className='time'>{timeStart}-{timeEnd}</span>\n        </div>\n        <div className={classLists.card_body_list_group}>\n          {positions}\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"card\" id=\"experiences\">\n      <div className={classLists.card_header_l1}>Experience</div>\n      <div className=\"card-body\">\n        {companies}\n      </div>\n    </div>\n)\n}\n\nclass Resume extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    }\n  }\n\n  componentDidMount() {\n    const fixedRef = this; //creating reference for .then async calls\n\n    fetch(\"./resumeData.json\")\n      .then((resp) => resp.json()) // Transform the data into json\n      .then(function(data) {\n        fixedRef.setState({'data':data});\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 col-xs-5\">\n            \n            <Summary data={this.state.data} />\n              \n            <Education data={this.state.data} />\n\n            <Languages data={this.state.data} />\n\n            <Skills data={this.state.data} />\n\n          </div>\n          \n          <div className=\"col-md-8 col-xs-7\">\n\n            <Experiences data={this.state.data} />\n\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Resume;"]},"metadata":{},"sourceType":"module"}