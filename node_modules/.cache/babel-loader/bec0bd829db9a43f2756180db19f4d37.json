{"ast":null,"code":"var _jsxFileName = \"/Users/emaun/GitHub/eloise.maun.me/eloise_maun_me/src/Resume.js\";\nimport React from 'react';\nconst classLists = {\n  'card': 'card my-3',\n  'card_header_l1': 'card-header p-2 text-center text-uppercase text-white font-weight-bold',\n  'card_header_l2': 'card-header p-2 text-left text-uppercase text-white font-weight-bold',\n  'card_body': 'card-body',\n  'card_body_list_unstyled': 'card-body p-3 list-unstyled',\n  'card_body_list_group': 'card-body list-group list-group-flush p-0',\n  'list_group_item': 'list-group-item p-2',\n  'list_group_item_title': 'list-group-item-title px-1 m-0 text-uppercase font-weight-bold',\n  'list_group_item_text': 'list-group-item-text p-1 pl-4 pt-0 m-0'\n};\nconst monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nclass Resume extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    const fixedRef = this; //creating reference for .then async calls\n\n    fetch(\"./resumeData.json\").then(resp => resp.json()) // Transform the data into json\n    .then(function (data) {\n      fixedRef.setState({\n        'data': data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 col-xs-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Summary, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Education, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Languages, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Skills, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-8 col-xs-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Experiences, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction Summary(props) {\n  const sumData = 'data' in props && 'summaries' in props.data ? props.data.summaries : [];\n  const summaries = sumData.map((cv, i) => {\n    return React.createElement(\"div\", {\n      className: classLists.list_group_item,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classLists.list_group_item_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, cv.title), React.createElement(\"div\", {\n      className: classLists.list_group_item_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, cv.text));\n  });\n  return React.createElement(\"div\", {\n    className: classLists.card,\n    id: \"summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Summary\"), React.createElement(\"div\", {\n    className: classLists.card_body_list_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, summaries));\n}\n\nfunction Education(props) {\n  const edData = 'data' in props && 'education' in props.data ? props.data.education : [];\n  const education = edData.map((cv, i) => {\n    return React.createElement(\"div\", {\n      className: classLists.list_group_item,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classLists.list_group_item_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, cv.school), React.createElement(\"div\", {\n      className: classLists.list_group_item_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, cv.degree, \" (\", cv.time.start[0], \"-\", cv.time.end[0], \")\"));\n  });\n  return React.createElement(\"div\", {\n    className: classLists.card,\n    id: \"education\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Education\"), React.createElement(\"div\", {\n    className: classLists.card_body_list_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, education));\n}\n\nfunction Languages(props) {\n  const langData = 'data' in props && 'languages' in props.data ? props.data.languages : [];\n  const languages = langData.map((cv, i) => {\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-pill float-right text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, cv.years, \" years\"), cv.title);\n  });\n  return React.createElement(\"div\", {\n    className: classLists.card,\n    id: \"languages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Languages\"), React.createElement(\"div\", {\n    className: classLists.card_body_list_unstyled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, languages));\n}\n\nfunction Skills(props) {\n  const skillData = 'data' in props && 'skills' in props.data ? props.data.skills : [];\n  const skills = skillData.map((cv, i) => {\n    var rank = [];\n\n    for (var j = 1; j <= cv.rank; j++) {\n      rank.push(React.createElement(\"i\", {\n        className: \"fas fa-star\",\n        key: 'r' + j,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-pill float-right text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, rank), cv.title);\n  });\n  return React.createElement(\"div\", {\n    className: classLists.card,\n    id: \"skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Skills\"), React.createElement(\"div\", {\n    className: classLists.card_body_list_unstyled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, skills));\n}\n\nfunction Experiences(props) {\n  const compData = 'data' in props && 'companies' in props.data ? props.data.companies : [];\n\n  function getDateDisplay(defStr, dateArr) {\n    var result = defStr;\n\n    if (dateArr) {\n      if (dateArr.length === 1) {\n        result = dateArr[0];\n      } else if (dateArr.length > 1) {\n        result = monthNames[dateArr[1]] + ' ' + dateArr[0];\n      }\n    }\n\n    return result;\n  }\n\n  const companies = compData.map((cv, i) => {\n    var timeStart = getDateDisplay('', cv.time.start);\n    var timeEnd = getDateDisplay('Present', cv.time.end);\n    const positions = cv.positions.map((cv2, j) => {\n      const desc = [React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, cv2.text)];\n\n      if ('tools' in cv2) {\n        desc.push(React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, cv2.tools));\n      }\n\n      return React.createElement(\"div\", {\n        className: classLists.list_group_item,\n        key: 'comp' + 1 + 'pos' + j,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classLists.list_group_item_title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, cv2.title), React.createElement(\"div\", {\n        className: classLists.list_group_item_text.replace('pl-4', 'pl-0'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, desc));\n    });\n    return React.createElement(\"div\", {\n      className: classLists.card.replace('my-3', 'my-2'),\n      key: 'comp' + i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classLists.card_header_l2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"time font-weight-normal float-right text-capitalize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, timeStart, \" - \", timeEnd), cv.name), React.createElement(\"div\", {\n      className: classLists.card_body_list_group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, positions));\n  });\n  return React.createElement(\"div\", {\n    className: classLists.card,\n    id: \"experiences\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classLists.card_header_l1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Experience\"), React.createElement(\"div\", {\n    className: classLists.card_body + ' px-1 py-0',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, companies));\n}\n\nexport default Resume;","map":{"version":3,"sources":["/Users/emaun/GitHub/eloise.maun.me/eloise_maun_me/src/Resume.js"],"names":["React","classLists","monthNames","Resume","Component","constructor","props","state","data","componentDidMount","fixedRef","fetch","then","resp","json","setState","render","Summary","sumData","summaries","map","cv","i","list_group_item","list_group_item_title","title","list_group_item_text","text","card","card_header_l1","card_body_list_group","Education","edData","education","school","degree","time","start","end","Languages","langData","languages","years","card_body_list_unstyled","Skills","skillData","skills","rank","j","push","Experiences","compData","companies","getDateDisplay","defStr","dateArr","result","length","timeStart","timeEnd","positions","cv2","desc","tools","replace","card_header_l2","name","card_body"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst classLists = {\n  'card'                    : 'card my-3',\n  'card_header_l1'          : 'card-header p-2 text-center text-uppercase text-white font-weight-bold',\n  'card_header_l2'          : 'card-header p-2 text-left text-uppercase text-white font-weight-bold',\n  'card_body'               : 'card-body',\n  'card_body_list_unstyled' : 'card-body p-3 list-unstyled',\n  'card_body_list_group'    : 'card-body list-group list-group-flush p-0',\n  'list_group_item'         : 'list-group-item p-2',\n  'list_group_item_title'   : 'list-group-item-title px-1 m-0 text-uppercase font-weight-bold',\n  'list_group_item_text'    : 'list-group-item-text p-1 pl-4 pt-0 m-0'\n}\n\nconst monthNames = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n\nclass Resume extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    }\n  }\n\n  componentDidMount() {\n    const fixedRef = this; //creating reference for .then async calls\n\n    fetch(\"./resumeData.json\")\n      .then((resp) => resp.json()) // Transform the data into json\n      .then(function(data) {\n        fixedRef.setState({'data':data});\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 col-xs-5\">\n            \n            <Summary data={this.state.data} />\n              \n            <Education data={this.state.data} />\n\n            <Languages data={this.state.data} />\n\n            <Skills data={this.state.data} />\n\n          </div>\n          \n          <div className=\"col-md-8 col-xs-7\">\n\n            <Experiences data={this.state.data} />\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Summary(props) {\n  const sumData = ('data' in props && 'summaries' in props.data) ? props.data.summaries : [];\n\n  const summaries = sumData.map((cv, i) => {\n    return (\n      <div className={classLists.list_group_item} key={i}>\n        <div className={classLists.list_group_item_title}>{cv.title}</div>\n        <div className={classLists.list_group_item_text}>{cv.text}</div>\n      </div>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"summary\">\n      <div className={classLists.card_header_l1}>Summary</div>\n      <div className={classLists.card_body_list_group}>\n        {summaries}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Education(props) {\n  const edData = ('data' in props && 'education' in props.data) ? props.data.education : [];\n\n  const education = edData.map((cv, i) => {\n    return (\n      <div className={classLists.list_group_item} key={i}>\n        <div className={classLists.list_group_item_title}>{cv.school}</div>\n        <div className={classLists.list_group_item_text}>\n          {cv.degree} ({cv.time.start[0]}-{cv.time.end[0]})\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"education\">\n      <div className={classLists.card_header_l1}>Education</div>\n      <div className={classLists.card_body_list_group}>\n        {education}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Languages(props) {\n  const langData = ('data' in props && 'languages' in props.data) ? props.data.languages : [];\n\n  const languages = langData.map((cv, i) => {\n    return (\n      <li key={i}>\n        <div className='badge badge-pill float-right text-white'>{cv.years} years</div>\n        {cv.title}\n      </li>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"languages\">\n      <div className={classLists.card_header_l1}>Languages</div>\n      <div className={classLists.card_body_list_unstyled}>\n        {languages}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Skills(props) {\n  const skillData = ('data' in props && 'skills' in props.data) ? props.data.skills : [];\n\n  const skills = skillData.map((cv, i) => {\n    var rank = [];\n    for (var j=1; j <= cv.rank; j++) { \n      rank.push(<i className='fas fa-star' key={'r'+j}></i>);\n    }\n    return (\n      <li key={i}>\n        <div className='badge badge-pill float-right text-white'>{rank}</div>\n        {cv.title}\n      </li>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"skills\">\n      <div className={classLists.card_header_l1}>Skills</div>\n      <div className={classLists.card_body_list_unstyled}>\n        {skills}\n      </div>\n    </div>\n  );\n}\n\n\nfunction Experiences(props) {\n  const compData = ('data' in props && 'companies' in props.data) ? props.data.companies : [];\n\n  function getDateDisplay(defStr,dateArr) {\n    var result = defStr;\n    if (dateArr) {\n      if (dateArr.length === 1) { result = dateArr[0]; }\n      else if (dateArr.length > 1) { result = monthNames[dateArr[1]]+' '+dateArr[0]; }\n    }\n    return result;\n  }\n\n  const companies = compData.map((cv, i) => {\n    var timeStart = getDateDisplay('',cv.time.start);\n    var timeEnd   = getDateDisplay('Present',cv.time.end);\n\n    const positions = cv.positions.map((cv2, j) => {\n      const desc = [<p>{cv2.text}</p>];\n      if ('tools' in cv2) { desc.push(<p>{cv2.tools}</p>); }\n\n      return (\n        <div className={classLists.list_group_item} key={'comp'+1+'pos'+j}>\n          <div className={classLists.list_group_item_title}>{cv2.title}</div>\n          <div className={classLists.list_group_item_text.replace('pl-4','pl-0')}>{desc}</div>\n        </div>\n      );\n    });\n\n    return (\n      <div className={classLists.card.replace('my-3','my-2')} key={'comp'+i}>\n        <div className={classLists.card_header_l2}>\n        <span className='time font-weight-normal float-right text-capitalize'>{timeStart} - {timeEnd}</span>\n          {cv.name}\n        </div>\n        <div className={classLists.card_body_list_group}>\n          {positions}\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className={classLists.card} id=\"experiences\">\n      <div className={classLists.card_header_l1}>Experience</div>\n      <div className={classLists.card_body+' px-1 py-0'}>\n        {companies}\n      </div>\n    </div>\n  );\n}\n\nexport default Resume;"]},"metadata":{},"sourceType":"module"}